package com.iti.model.entity;
// Generated Mar 23, 2019 1:04:18 PM by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name="product",catalog="toysonlineshoppingdb")
public class Product implements java.io.Serializable {

    @Id
    @GeneratedValue(strategy=IDENTITY)
    @Column(name="product_id", unique=true, nullable=false)
    private Integer ProductID;

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="category_id", nullable=false)
    private Category category;

    @Column(name="name", nullable=false, length=50)
    private String name;
    @Column(name="description", nullable=false, length=500)
    private String description;
    @Column(name="image_path", nullable=false, length=50)
    private String imagePath;
    @Column(name="price", nullable=false, precision=3, scale=3)
    private BigDecimal price;
    @Column(name="min_age", nullable=false)
    private int minAge;

    @OneToMany(fetch=FetchType.LAZY, mappedBy="products")
    private Set<CartItem> cartItems = new HashSet(0);


    @ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="stores_products", catalog="toysonlineshoppingdb",
            joinColumns = {@JoinColumn(name="products_id", nullable=false, updatable=false) },
            inverseJoinColumns = {@JoinColumn(name="stores_id", nullable=false, updatable=false) })
    private Set<Stores> stores = new HashSet(0);


    @ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="order_history_products", catalog="toysonlineshoppingdb",
            joinColumns = {@JoinColumn(name="products_id", nullable=false, updatable=false) },
            inverseJoinColumns = {@JoinColumn(name="order_history_id", nullable=false, updatable=false) })
    private Set<OrderHistory> orderHistories = new HashSet(0);

    @ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="user_products", catalog="toysonlineshoppingdb", joinColumns = {
            @JoinColumn(name="products_id", nullable=false, updatable=false) }, inverseJoinColumns = {
            @JoinColumn(name="user_id", nullable=false, updatable=false) })
    private Set<User> userProducts = new HashSet(0);


    @ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="user_wishes", catalog="toysonlineshoppingdb",
            joinColumns = {@JoinColumn(name="user_id", nullable=false, updatable=false) },
            inverseJoinColumns = {@JoinColumn(name="products_id", nullable=false, updatable=false) })
    private Set<User> userWishes = new HashSet(0);

    @OneToMany(fetch=FetchType.LAZY, mappedBy="products")
    private Set<Review> reviews = new HashSet(0);

    public Product() {
    }
    public Product(Category category, String name, String description, String imagename, BigDecimal price, int minage) {
        this.category = category;
        this.name = name;
        this.description = description;
        this.imagePath = imagename;
        this.price = price;
        this.minAge = minage;
    }
    public Product(Category category, String name, String description, String imagename, BigDecimal price, int minage, Set itemses, Set storeses, Set orderhistories, Set users, Set users_1, Set reviews) {
        this.category = category;
        this.name = name;
        this.description = description;
        this.imagePath = imagename;
        this.price = price;
        this.minAge = minage;
        this.cartItems = itemses;
        this.stores = storeses;
        this.orderHistories = orderhistories;
        this.userProducts = users;
        this.userWishes = users_1;
        this.reviews = reviews;
    }

    public Integer getProductID() {
        return ProductID;
    }

    public void setProductID(Integer productID) {
        this.ProductID = productID;
    }

    public Category getCategory() {
        return category;
    }

    public void setCategory(Category category) {
        this.category = category;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getImagePath() {
        return imagePath;
    }

    public void setImagePath(String imagePath) {
        this.imagePath = imagePath;
    }

    public BigDecimal getPrice() {
        return price;
    }

    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    public int getMinAge() {
        return minAge;
    }

    public void setMinAge(int minAge) {
        this.minAge = minAge;
    }

    public Set getCartItems() {
        return cartItems;
    }

    public void setCartItems(Set cartItems) {
        this.cartItems = cartItems;
    }

    public Set getStores() {
        return stores;
    }

    public void setStores(Set stores) {
        this.stores = stores;
    }

    public Set getOrderHistories() {
        return orderHistories;
    }

    public void setOrderHistories(Set orderHistories) {
        this.orderHistories = orderHistories;
    }

    public Set getUserProducts() {
        return userProducts;
    }

    public void setUserProducts(Set userProducts) {
        this.userProducts = userProducts;
    }

    public Set getUserWishes() {
        return userWishes;
    }

    public void setUserWishes(Set userWishes) {
        this.userWishes = userWishes;
    }

    public Set getReviews() {
        return reviews;
    }

    public void setReviews(Set reviews) {
        this.reviews = reviews;
    }
}


